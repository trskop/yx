{-# LANGUAGE NoImplicitPrelude #-}
{-# LANGUAGE OverloadedStrings #-}
module YX.Shell.Bash
  where

import Data.Text (Text)
import qualified Data.Text as Text (unlines)

import YX.Type.ConfigFile (ProjectConfig)


mkBashrc :: ProjectConfig -> Text -> Text
mkBashrc _ _ = Text.unlines
    [ "# This file was generated by YX, please do not bother to edit it. It's\
        \ going to"
    , "# be overwritten on the next YX invocation."
    , ""
    , "if [[ -e '/etc/profile' ]]; then"
    , "    source '/etc/profile'"
    , "elif [[ -e '/etc/bash.bashrc' ]]; then"
    , "    source '/etc/bash.bashrc'"
    , "fi"
    , ""
    , "function __yx_ps1()"
    , "{"
    , "    if [[ ! -v 'YX_VERSION' ]]; then"
    , "        return"
    , "    fi"
    , ""
    , "    printf \"%s:%s\\n\" \"${YX_PROJECT}\" \"${YX_ENVIRONMENT}\""
    , "}"
    , ""
    , "function __yx_ps1_pretty()"
    , "{"
    , "    if [[ ! -v 'YX_VERSION' ]]; then"
    , "        return"
    , "    fi"
    , ""
    , "    printf \" (yx:%s)\\n\" \"$(__yx_ps1)\""
    , "}"
    , ""
    , "# This is default prompt, user can overwrite it in '${HOME}/.bash_yx'."
    , "PS1='\\u@\\h:\\w$(__yx_ps1_pretty)\\$ '"
    , ""
    , "if [[ -e \"${HOME}/.bash_yx\" ]]; then"
    , "    echo \"Loading user defined *rc file: '${HOME}/.bash_yx'.\""
    , "    source \"${HOME}/.bash_yx\""
    , "fi"
    , ""
    , "if [[ -e \"${YX_ENVIRONMENT_DIR}/bash/completion\" ]]; then"
    , "    source \"${YX_ENVIRONMENT_DIR}/bash/completion\""
    , "fi"
    , ""
    , "if [[ -e \"${YX_ENVIRONMENT_DIR}/bash/environment\" ]]; then"
    , "    source \"${YX_ENVIRONMENT_DIR}/bash/environment\""
    , "fi"
    , ""
    , "if [[ -e \"${YX_ENVIRONMENT_DIR}/bash/aliases\" ]]; then"
    , "    source \"${YX_ENVIRONMENT_DIR}/bash/aliases\""
    , "fi"
    ]

mkCompletion :: ProjectConfig -> Text -> Text
mkCompletion _ _ = ""

mkEnvironment :: ProjectConfig -> Text -> Text
mkEnvironment _ _ = ""

mkAliases :: ProjectConfig -> Text -> Text
mkAliases _ _ = ""
